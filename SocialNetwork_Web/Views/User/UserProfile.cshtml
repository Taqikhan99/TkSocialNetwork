@model SocialNetwork_Dal.Entities.User
@{
    ViewBag.Title = "MyProfile";
}

@{
    var cuser = Session["loggedinUser"] as SocialNetwork_Dal.Entities.User;
}
<style>
    .profiletopSec {
        height: auto;
        min-height: 400px;
        width: 100%;
        border: 1px solid gray;
    }

    .profileImg {
        height: 250px;
        width: 250px;
        cursor: pointer;
    }

        .profileImg > img {
            width: 90%;
            height: 90%;
            border-radius: 50%;
        }

    .image-upload {
    }

        .image-upload > input {
            display: none;
        }

        .image-upload img {
            width: 40px;
            cursor: pointer;
            margin-top: 2rem;
        }
</style>

@*<div class="image-upload">

        <label for="file-input">
            <img src="~/Content/images/upload.png" />
        </label>

        <input id="file-input" name="file" type="file" onchange="readURL(this)" />
    </div>*@



<div class="container mt-5 p-3">

    <section class="row profiletopSec p-4">

        <div class="row">
            <div class="profileImg col-md-4 mx-auto d-flex align-items-center">

                @*<img src="@Url.Content()" />*@
                @if (Model.ProfilePicPath != "" && Model.ProfilePicPath != null)
                {
                    <img id="" src="@Url.Content(Model.ProfilePicPath)" alt="@Model.ProfilePicPath" />

                }
                else
                {
                    <img src="~/Content/images/user.png" />
                }
            </div>
            <div class="ProfileInfo col-md-8">



                <div class="col-md-8  ps-5">
                    <h4 class="mb-4">User Name: @Model.UserName</h4>
                    <h4 class="mb-4">Email: @Model.Email</h4>
                    <h4 class="mb-4">Phone: @Model.Phone</h4>
                    <h4 class="mb-4">Date of Birth: @Model.Dob</h4>
                    <h4 class="mb-4">Joined on: @Model.CreatedAt.ToString("dd/MM/yyyy")</h4>
                    <h4 class="mb-4">Lives in: @Model.City  @Model.Country </h4>

                    @if (Model.Id != cuser.Id)
                    {

                        if (ViewBag.frStatus == 0)
                        {
                            <button class="btn w-50 btn-success mx-auto " onclick="SendRequest(this,@Model.Id)">Add Friend</button>
                        }
                        else if (ViewBag.frStatus == 1)
                        {
                            <button disabled class="btn w-50 btn-success mx-auto">Req Pending</button>
                        }
                        else if (ViewBag.frStatus == 2)
                        {
                            <h4 class="btn btn-success mx-auto">Friends</h4>
                        }
                    }
                    else
                    {
                        <button data-bs-toggle="modal" data-bs-target="#exampleModal" class="btn w-50 btn-primary mx-auto">Edit Profile</button>
                    }


                </div>





                <div class="row mb-5">



                </div>
                <div class="row mt-5">


                </div>

            </div>

        </div>



        @*<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
                Launch demo modal
            </button>*@

        <!-- Modal -->
        <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h1 class="modal-title fs-5" id="exampleModalLabel">Modal title</h1>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form id="editprofile" method="POST" enctype="multipart/form-data">
                            <input type="hidden" id="dob" name="Dob" value="@Model.Dob">
                            <input type="hidden" id="createdat" name="CreatedAt" value="@Model.CreatedAt">
                            <input type="hidden" id="fname" name="FirstName" value="@Model.FirstName">
                            <input type="hidden" id="lname" name="LastName" value="@Model.LastName">
                            <div class="mb-3">
                                <label for="emailadd" class="form-label">Email</label>
                                <input type="email" class="form-control" id="emailadd" name="Email" aria-describedby="emailHelp" value="@Model.Email">

                            </div>
                            <div class="mb-3">
                                <label for="password" class="form-label">Password</label>
                                <input type="password" class="form-control" id="password" name="Password" value="@Model.Password">
                            </div>

                            <div class="mb-3">
                                <label for="username" class="form-label">Username</label>
                                <input type="text" class="form-control" id="username" name="UserName" value="@Model.UserName">
                            </div>
                            @* Select country *@
                            <div class="mb-4">

                                <select onchange="GetCountryvalue()" id="country" name="Country" class="form-control">
                                </select>
                                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                            </div>

                            <div class="mb-4">

                                <select id="city" name="City" class="form-control">
                                    <option selected disabled>Please Select a city</option>
                                </select>
                                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                            </div>
                            <div class="mb-3">
                                <label for="gender" class="form-label">Gender</label>
                                <select name="Gender" id="gender" class="form-control">

                                    <option value="Male">Male</option>
                                    <option value="Female">Female</option>
                                </select>
                            </div>

                            <div class="image-upload text-center mb-3  ">
                                @*<img class="ms-auto"  style="height:150px;width:220px" id="uploadedimg" src="~/Content/images/user3.jpg" />*@
                                @if (Model.ProfilePicPath != "")
                                {
                                    <img class="ms-auto" style="height:150px;width:220px" id="uploadedimg" src="~/Content/images/user3.jpg" />

                                }
                                else
                                {
                                    <img class="ms-auto" style="height:150px;width:220px" id="uploadedimg" src="~/Content/images/user.png" />
                                }
                                <label for="file-input">
                                    <img style="margin-top:140px;" src="~/Content/images/upload.png" />
                                </label>

                                <input id="file-input" name="ProfilePic" type="file" onchange="readURL(this)" />
                            </div>


                            <button onclick="validate()" type="submit" class="btn btn-primary w-100">Update Profile</button>


                        </form>
                    </div>

                </div>
            </div>
        </div>



    </section>
    <section class="showmyPosts">
    </section>


</div>

<script src="~/Scripts/jquery-3.5.0.min.js"></script>

<script>
    console.log("profile pic:"+'@Model.ProfilePicPath');
    function readURL(input) {
        console.log(input);

        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                //console.log($("#uploadedimg"));
                //console.log(e);
                //$("#uploadedimg").style.display = "block";
                $('#uploadedimg')
                    .attr('src', e.target.result);
            };

            reader.readAsDataURL(input.files[0]);





        }
    }
    //send req func
    function SendRequest(e, toId) {
        //alert("started Sending")
        console.log(e.innerHTML);
        console.log(toId);

        e.innerHTML = "Req Send!"

        $.ajax({
            type: "POST",
            url: "/User/SendRequest",
            data: { toId: toId },
            success: function (data) {
                console.log(data)
                if (data != null) {
                    if (data.code == 1) {

                        e.innerHTML = "Req Send";
                        e.disabled = true;
                        swal({
                            title: "Succss",
                            text: "Send Request Success!",
                            icon: "success",
                        });
                    }
                }



            }
        });


    }



    $.ajax({
        type: "GET",
        url: "/Accounts/GetCountryOptions",
        data: "{}",
        success: function (data) {
            console.log(data)
            if (data != null) {
                var jsondata = JSON.parse(data);
                console.log(jsondata)
                var s = '<option disabled selected>Please Select a country</option>';
                for (var i = 0; i < jsondata.length; i++) {
                    console.log('row: ', jsondata[i].Countryname)
                    s += '<option value="' + jsondata[i].CountryId + '">' + jsondata[i].Countryname + '</option>';
                }
            }


            $("#country").html(s);
        }
    });

    //function to get the value of countt
    function GetCountryvalue() {
        var country = document.getElementById("country").value;

        populateCities(country)
    }

    //function to populate cities
    function populateCities(countryid) {

        $.ajax({
            type: "GET",
            url: "/Accounts/GetCityOptions",
            data: { id: parseInt(countryid) },
            success: function (data) {
                console.log(data)
                if (data != null) {
                    var jsondata = JSON.parse(data);
                    console.log(data)
                    var s = '<option selected disabled >Please Select a city</option>';
                    for (var i = 0; i < jsondata.length; i++) {
                        console.log('row: ', jsondata[i].Cityname)
                        s += '<option value="' + jsondata[i].CityId + '">' + jsondata[i].CityName + '</option>';
                    }
                }


                $("#city").html(s);
            }
        });

    }


    function validate(){
        let email = document.getElementById("emailadd").value;
        let password = document.getElementById("password").value;
        let userName = document.getElementById("username").value;
        let file = document.getElementById("file-input").value;
        console.log(email,file)
    }


</script>



